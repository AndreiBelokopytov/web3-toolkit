{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AGAA;;AAEA,MAAM,8CAAwB,GAAG,CAAC,AAAC;AAO5B,MAAM,yCAAO,iBAAG,CAAA,GAAA,YAAK,CAAA,CAAC,IAAI,CAC/B,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAA,gBAAE,YAAY,CAAA,EAAS,GAAK;IAC9C,qBAAO,gBAAC,MAAI;kBAAE,oCAAc,CAAC,OAAO,EAAE,YAAY,CAAC;MAAQ,CAAC;CAC7D,CACF,AAAC;AAEF,SAAS,oCAAc,CACrB,OAAe,EACf,YAAY,GAAG,8CAAwB,EACvC;IACA,IAAI,OAAO,CAAC,MAAM,IAAI,YAAY,GAAG,CAAC,IAAI,OAAO,CAAC,KAAK,aAAa,EAClE,OAAO,OAAO,CAAC;IAGjB,OAAO,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,KAAK,CACzD,OAAO,CAAC,MAAM,GAAG,YAAY,EAC7B,OAAO,CAAC,MAAM,CACf,CAAC,CAAC,CAAC;CACL;;AD3BD;;;ADAA;;;ADAA;;;;;;AKAA;;AAGA,MAAM,sCAAgB,GAA2B;IAC/C,KAAK,EAAE,SAAS;IAChB,KAAK,EAAE,SAAS;IAChB,KAAK,EAAE,SAAS;IAChB,KAAK,EAAE,QAAQ;IACf,MAAM,EAAE,OAAO;CAChB,AAAC;AAaF,MAAM,iCAAW,iBAAG,CAAA,GAAA,oBAAa,CAAA,CAAc;IAC7C,UAAU,EAAE,IAAM,IAAI;IACtB,UAAU,EAAE,IAAM,IAAI;IACtB,SAAS,EAAE,sCAAgB;CAC5B,CAAC,AAAC;AAOI,MAAM,yCAAY,GAAG,CAAC,YAC3B,QAAQ,CAAA,EACR,OAAO,EAAE,cAAc,CAAA,EACvB,OAAO,EAAE,cAAc,CAAA,YACvB,QAAQ,CAAA,aACR,SAAS,GAAG,EAAE,GACR,GAAK;IACX,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,CAAA,GAAA,eAAQ,CAAA,CAAqB,cAAc,CAAC,AAAC;IAC3E,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,CAAA,GAAA,eAAQ,CAAA,CAAqB,cAAc,CAAC,AAAC;IAE3E,MAAM,OAAO,GAAgB;iBAC3B,OAAO;iBACP,OAAO;oBACP,UAAU;oBACV,UAAU;kBACV,QAAQ;QACR,SAAS,EAAE;YAAE,GAAG,sCAAgB;YAAE,GAAG,SAAS;SAAE;KACjD,AAAC;IAEF,qBACE,gBAAC,iCAAW,CAAC,QAAQ;QAAC,KAAK,EAAE,OAAO;kBAAG,QAAQ;MAAwB,CACvE;CACH,AAAC;AAEK,MAAM,yCAAc,GAAG,IAAmB,CAAA,GAAA,iBAAU,CAAA,CAAC,iCAAW,CAAC,AAAC;;ADzDzE;;;;;;;;;AIAA;AAEO,MAAM,yCAAU,GAAG,IAAM;IAC9B,MAAM,WAAE,OAAO,CAAA,EAAE,GAAG,CAAA,GAAA,yCAAc,CAAA,EAAE,AAAC;IACrC,OAAO,OAAO,CAAC;CAChB,AAAC;;ADLF;;;ADAA;;;;;AIAA;AAOO,MAAM,yCAAQ,GAAG,IAAyB;IAC/C,MAAM,WAAE,OAAO,CAAA,aAAE,SAAS,CAAA,EAAE,GAAG,CAAA,GAAA,yCAAc,CAAA,EAAE,AAAC;IAEhD,IAAI,CAAC,OAAO,EACV,OAAO,SAAS,CAAC;IAGnB,MAAM,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,SAAS,AAAC;IAE7C,OAAO;QAAE,EAAE,EAAE,OAAO;cAAE,IAAI;KAAE,CAAC;CAC9B,AAAC;;ADjBF;;;;;;;;AGAA;;;;;;AEMO,MAAM,yCAAgB,GAAqB,AAAC,MAAM,CAAS,QAAQ,AAAC;;ADN3E;;;;;AD0BO,SAAS,yCAAW,GAAW;IACpC,MAAM,kBAAkB,GAAG,CAAA,GAAA,aAAM,CAAA,CAC/B,IAAI,CAAA,GAAA,yBAAkB,CAAA,EAAE,CACzB,AAAC;IACF,MAAM,cAAE,UAAU,CAAA,cAAE,UAAU,CAAA,EAAE,GAAG,CAAA,GAAA,yCAAc,CAAA,EAAE,AAAC;IAEpD,MAAM,YAAY,GAAoB,CAAA,GAAA,yBAAkB,CAAA,CAAC,mBAAmB,EAAE,GAC1E;QACE,MAAM,EAAE,cAAc;KACvB,GACD;QACE,MAAM,EAAE,cAAc;KACvB,AAAC;IAEN,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GACzC,CAAA,GAAA,eAAQ,CAAA,CAAkB,YAAY,CAAC,AAAC;IAE1C,MAAM,qBAAqB,GAAG,CAAA,GAAA,kBAAW,CAAA,CACvC,CAAC,QAAkB,GAAK;QACtB,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,kBAAkB,CAAC,CAAC,SAAS,GAAM,CAAA;oBACjC,GAAG,SAAS;oBACZ,MAAM,EAAE,WAAW;iBACpB,CAAA,AAAC,CAAC,CAAC;YACJ,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SACzB,MAAM;YACL,kBAAkB,CAAC,CAAC,SAAS,GAAM,CAAA;oBACjC,GAAG,SAAS;oBACZ,MAAM,EAAE,cAAc;iBACvB,CAAA,AAAC,CAAC,CAAC;YACJ,UAAU,CAAC,SAAS,CAAC,CAAC;SACvB;QAED,kBAAkB,CAAC,OAAO,EAAE,cAAc,EAAE,CAAC;KAC9C,EACD;QAAC,UAAU;KAAC,CACb,AAAC;IAEF,MAAM,kBAAkB,GAAG,CAAA,GAAA,kBAAW,CAAA,CACpC,CAAC,OAAe,GAAK,UAAU,CAAC,OAAO,CAAC,EACxC;QAAC,UAAU;KAAC,CACb,AAAC;IAEF,CAAA,GAAA,gBAAS,CAAA,CAAC,IAAM;QACd,IAAI,CAAA,GAAA,yBAAkB,CAAA,CAAC,mBAAmB,EAAE,EAAE;YAC5C,CAAA,GAAA,yCAAgB,CAAA,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;YAC9D,CAAA,GAAA,yCAAgB,CAAA,CAAC,EAAE,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;SACzD;QAED,OAAO,IAAM;YACX,IAAI,CAAA,GAAA,yBAAkB,CAAA,CAAC,mBAAmB,EAAE,EAAE;gBAC5C,CAAA,GAAA,yCAAgB,CAAA,CAAC,cAAc,CAC7B,iBAAiB,EACjB,qBAAqB,CACtB,CAAC;gBACF,CAAA,GAAA,yCAAgB,CAAA,CAAC,cAAc,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;aACrE;SACF,CAAC;KACH,EAAE;QAAC,qBAAqB;QAAE,kBAAkB;KAAC,CAAC,CAAC;IAEhD,MAAM,OAAO,GAAG,CAAA,GAAA,kBAAW,CAAA,CAAC,UAAY;QACtC,IAAI,CAAC,CAAA,GAAA,yBAAkB,CAAA,CAAC,mBAAmB,EAAE,EAAE;YAC7C,kBAAkB,CAAC,CAAC,SAAS,GAAM,CAAA;oBACjC,GAAG,SAAS;oBACZ,MAAM,EAAE,YAAY;iBACrB,CAAA,AAAC,CAAC,CAAC;YACJ,kBAAkB,CAAC,OAAO,EAAE,eAAe,EAAE,CAAC;YAC9C,OAAO;SACR;QAED,kBAAkB,CAAC,CAAC,SAAS,GAAM,CAAA;gBACjC,GAAG,SAAS;gBACZ,MAAM,EAAE,YAAY;gBACpB,KAAK,EAAE,SAAS;aACjB,CAAA,AAAC,CAAC,CAAC;QACJ,IAAI;YACF,MAAM,QAAQ,GAAG,MAAM,CAAA,GAAA,yCAAgB,CAAA,CAAC,OAAO,CAAC;gBAC9C,MAAM,EAAE,qBAAqB;aAC9B,CAAC,AAAC;YACH,qBAAqB,CAAC,QAAQ,CAAC,CAAC;YAChC,MAAM,OAAO,GAAG,MAAM,CAAA,GAAA,yCAAgB,CAAA,CAAC,OAAO,CAAC;gBAC7C,MAAM,EAAE,aAAa;aACtB,CAAC,AAAC;YACH,kBAAkB,CAAC,OAAO,CAAC,CAAC;SAC7B,CAAC,OAAO,GAAG,EAAE;YACZ,IAAI,OAAO,AAAoB,AAAC;YAChC,IAAI,GAAG,YAAY,KAAK,EACtB,OAAO,GAAG,GAAG,EAAE,OAAO,CAAC;YAEzB,IAAI,OAAO,GAAG,KAAK,QAAQ,EACzB,OAAO,GAAG,GAAG,CAAC;YAEhB,kBAAkB,CAAC,CAAC,SAAS,GAAM,CAAA;oBACjC,GAAG,SAAS;oBACZ,MAAM,EAAE,cAAc;oBACtB,KAAK,EAAE,OAAO;iBACf,CAAA,AAAC,CAAC,CAAC;SACL;KACF,EAAE;QAAC,qBAAqB;QAAE,kBAAkB;KAAC,CAAC,AAAC;IAEhD,OAAO;QACL,GAAG,eAAe;QAClB,cAAc,EAAE,eAAe,CAAC,MAAM,KAAK,cAAc;QACzD,cAAc,EAAE,eAAe,CAAC,MAAM,KAAK,cAAc;QACzD,WAAW,EAAE,eAAe,CAAC,MAAM,KAAK,WAAW;QACnD,YAAY,EAAE,eAAe,CAAC,MAAM,KAAK,YAAY;QACrD,YAAY,EAAE,eAAe,CAAC,MAAM,KAAK,YAAY;iBACrD,OAAO;KACR,CAAC;CACH;;ADvID;;;;AIYO,MAAM,yCAAe,GAAG;IAC7B,YAAY,IAAoB;QAC9B,OAAO;YACL,MAAM,EAAE,cAAc;YACtB,QAAQ,EAAE,EAAE;SACb,CAAC;KACH;IACD,YAAY,IAAoB;QAC9B,OAAO;YACL,MAAM,EAAE,cAAc;YACtB,QAAQ,EAAE,EAAE;SACb,CAAC;KACH;IACD,SAAS,EAAC,QAAkB,EAAmB;QAC7C,OAAO;YACL,MAAM,EAAE,WAAW;sBACnB,QAAQ;SACT,CAAC;KACH;IACD,UAAU,IAAoB;QAC5B,OAAO;YACL,MAAM,EAAE,YAAY;YACpB,QAAQ,EAAE,EAAE;SACb,CAAC;KACH;IACD,UAAU,IAAoB;QAC5B,OAAO;YACL,MAAM,EAAE,YAAY;YACpB,QAAQ,EAAE,EAAE;SACb,CAAC;KACH;CACF,AAAC;;;;;;;;;;;AE3CF;;;;;;AEAA;AAEO,MAAM,yCAAW,GAAG,IAAM;IAC/B,MAAM,YAAE,QAAQ,CAAA,EAAE,GAAG,CAAA,GAAA,yCAAc,CAAA,EAAE,AAAC;IACtC,OAAO,QAAQ,CAAC;CACjB,AAAC;;ADLF;;;;ADcA,MAAM,yBAAG,GAAG;IAAC,0DAA0D;CAAC,AAAC;AAElE,MAAM,yCAAe,GAAG,CAC7B,eAAuB,EACvB,OAAe,GACE;IACjB,MAAM,QAAQ,GAAG,CAAA,GAAA,yCAAW,CAAA,EAAE,AAAC;IAC/B,MAAM,QAAQ,GAAG,CAAA,GAAA,cAAO,CAAA,CAAC,IAAM;QAC7B,OAAO,IAAI,CAAA,GAAA,eAAQ,CAAA,CAAC,eAAe,EAAE,yBAAG,EAAE,QAAQ,CAAC,CAAC;KACrD,EAAE;QAAC,eAAe;QAAE,QAAQ;KAAC,CAAC,AAAC;IAEhC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAA,GAAA,eAAQ,CAAA,CAAoB;QACpD,OAAO,EAAE,CAAA,GAAA,gBAAS,CAAA,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1B,SAAS,EAAE,IAAI;KAChB,CAAC,AAAC;IAEH,MAAM,OAAO,GAAG,CAAA,GAAA,kBAAW,CAAA,CAAC,UAAY;QACtC,QAAQ,CAAC,CAAC,SAAS,GAAM,CAAA;gBACvB,GAAG,SAAS;gBACZ,SAAS,EAAE,IAAI;gBACf,KAAK,EAAE,SAAS;aACjB,CAAA,AAAC,CAAC,CAAC;QACJ,IAAI;YACF,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,AAAC;YAClD,QAAQ,CAAC,CAAC,SAAS,GAAM,CAAA;oBACvB,GAAG,SAAS;6BACZ,OAAO;oBACP,SAAS,EAAE,KAAK;iBACjB,CAAA,AAAC,CAAC,CAAC;SACL,CAAC,OAAO,GAAG,EAAE;YACZ,IAAI,YAAY,AAAoB,AAAC;YACrC,IAAI,GAAG,YAAY,KAAK,EACtB,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;YAE7B,IAAI,OAAO,GAAG,KAAK,QAAQ,EACzB,YAAY,GAAG,GAAG,CAAC;YAErB,QAAQ,CAAC,CAAC,SAAS,GAAM,CAAA;oBACvB,GAAG,SAAS;oBACZ,SAAS,EAAE,KAAK;oBAChB,KAAK,EAAE,YAAY;iBACpB,CAAA,AAAC,CAAC,CAAC;SACL;KACF,EAAE;QAAC,OAAO;QAAE,QAAQ;KAAC,CAAC,AAAC;IAExB,CAAA,GAAA,gBAAS,CAAA,CAAC,IAAM;QACd,OAAO,EAAE,CAAC;KACX,EAAE;QAAC,OAAO;KAAC,CAAC,CAAC;IAEd,OAAO;QAAE,GAAG,KAAK;iBAAE,OAAO;KAAE,CAAC;CAC9B,AAAC;;ADhEF;;;;;;;;;;;","sources":["src/index.tsx","src/components/index.ts","src/components/Address/index.ts","src/components/Address/Address.tsx","src/context/index.ts","src/context/web3Context.tsx","src/hooks/index.ts","src/hooks/useAddress/index.ts","src/hooks/useAddress/useAddress.ts","src/hooks/useChain/index.ts","src/hooks/useChain/useChain.ts","src/hooks/useMetaMask/index.ts","src/hooks/useMetaMask/useMetaMask.ts","src/providers/index.ts","src/providers/metaMaskProvider.ts","src/hooks/useMetaMask/useMetaMask.types.ts","src/hooks/useTokenBalance/index.ts","src/hooks/useTokenBalance/useTokenBalance.ts","src/hooks/useProvider/index.ts","src/hooks/useProvider/useProvider.ts"],"sourcesContent":["export * from './components';\nexport * from './context';\nexport * from './hooks';\nexport * from './providers';\n","export * from './Address';\n","export * from './Address';\n","import React from 'react';\n\nconst DEFAULT_SUBSTRING_LENGTH = 6;\n\ntype Props = {\n  children: string;\n  substrLength?: number;\n};\n\nexport const Address = React.memo(\n  ({ children: address, substrLength }: Props) => {\n    return <span>{shortenAddress(address, substrLength)}</span>;\n  }\n);\n\nfunction shortenAddress(\n  address: string,\n  substrLength = DEFAULT_SUBSTRING_LENGTH\n) {\n  if (address.length <= substrLength * 2 || address.match(/.*\\.{3}.*/)) {\n    return address;\n  }\n\n  return `${address.slice(0, substrLength)}...${address.slice(\n    address.length - substrLength,\n    address.length\n  )}`;\n}\n","export * from './web3Context';\n","import { getDefaultProvider } from 'ethers';\nimport React, { createContext, useContext, useState } from 'react';\n\nconst defaultChainDict: Record<string, string> = {\n  '0x1': 'Mainnet',\n  '0x3': 'Ropsten',\n  '0x4': 'Rinkeby',\n  '0x5': 'Goerli',\n  '0x2a': 'Kovan'\n};\n\ntype BaseProvider = ReturnType<typeof getDefaultProvider>;\n\nexport type Web3Context = {\n  address?: string;\n  chainId?: string;\n  chainDict: Record<string, string>;\n  provider?: BaseProvider;\n  setAddress: (address: string | undefined) => void;\n  setChainId: (chainID: string | undefined) => void;\n};\n\nconst Web3Context = createContext<Web3Context>({\n  setAddress: () => null,\n  setChainId: () => null,\n  chainDict: defaultChainDict\n});\n\ntype Props = Pick<Web3Context, 'address' | 'chainId' | 'provider'> & {\n  chainDict?: Record<string, string>;\n  children: React.ReactNode;\n};\n\nexport const Web3Provider = ({\n  children,\n  address: initialAddress,\n  chainId: initialChainId,\n  provider,\n  chainDict = {}\n}: Props) => {\n  const [address, setAddress] = useState<string | undefined>(initialAddress);\n  const [chainId, setChainId] = useState<string | undefined>(initialChainId);\n\n  const context: Web3Context = {\n    address,\n    chainId,\n    setAddress,\n    setChainId,\n    provider,\n    chainDict: { ...defaultChainDict, ...chainDict }\n  };\n\n  return (\n    <Web3Context.Provider value={context}>{children}</Web3Context.Provider>\n  );\n};\n\nexport const useWeb3Context = (): Web3Context => useContext(Web3Context);\n","export * from './useAddress';\nexport * from './useChain';\nexport * from './useMetaMask';\nexport * from './useTokenBalance';\nexport * from './useProvider';\n","export * from './useAddress';\n","import { useWeb3Context } from '../../context/web3Context';\n\nexport const useAddress = () => {\n  const { address } = useWeb3Context();\n  return address;\n};\n","export * from './useChain';\n","import { useWeb3Context } from '../../context/web3Context';\n\ntype Chain = {\n  id: string;\n  name: string;\n};\n\nexport const useChain = (): Chain | undefined => {\n  const { chainId, chainDict } = useWeb3Context();\n\n  if (!chainId) {\n    return undefined;\n  }\n\n  const name = chainDict[chainId] ?? 'Unknown';\n\n  return { id: chainId, name };\n};\n","export * from './useMetaMask';\nexport * from './useMetaMask.types';\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport MetaMaskOnboarding from '@metamask/onboarding';\nimport { metaMaskProvider } from '../../providers';\nimport { useWeb3Context } from '../../context/web3Context';\n\nexport type OnBoardingStateStatus =\n  | 'notInstalled'\n  | 'notConnected'\n  | 'onboarding'\n  | 'connecting'\n  | 'connected';\n\ntype OnboardingState = {\n  status: OnBoardingStateStatus;\n  error?: string;\n};\n\ntype Result = OnboardingState & {\n  isNotInstalled: boolean;\n  isNotConnected: boolean;\n  isConnected: boolean;\n  isConnecting: boolean;\n  isOnboarding: boolean;\n  connect: () => void;\n};\n\nexport function useMetaMask(): Result {\n  const metaMaskOnboarding = useRef<MetaMaskOnboarding>(\n    new MetaMaskOnboarding()\n  );\n  const { setAddress, setChainId } = useWeb3Context();\n\n  const initialState: OnboardingState = MetaMaskOnboarding.isMetaMaskInstalled()\n    ? {\n        status: 'notConnected'\n      }\n    : {\n        status: 'notInstalled'\n      };\n\n  const [onboardingState, setOnboardingState] =\n    useState<OnboardingState>(initialState);\n\n  const handleAccountsChanded = useCallback(\n    (accounts: string[]) => {\n      if (accounts.length > 0) {\n        setOnboardingState((prevState) => ({\n          ...prevState,\n          status: 'connected'\n        }));\n        setAddress(accounts[0]);\n      } else {\n        setOnboardingState((prevState) => ({\n          ...prevState,\n          status: 'notConnected'\n        }));\n        setAddress(undefined);\n      }\n\n      metaMaskOnboarding.current?.stopOnboarding();\n    },\n    [setAddress]\n  );\n\n  const handleChainChanged = useCallback(\n    (chainId: string) => setChainId(chainId),\n    [setChainId]\n  );\n\n  useEffect(() => {\n    if (MetaMaskOnboarding.isMetaMaskInstalled()) {\n      metaMaskProvider.on('accountsChanged', handleAccountsChanded);\n      metaMaskProvider.on('chainChanged', handleChainChanged);\n    }\n\n    return () => {\n      if (MetaMaskOnboarding.isMetaMaskInstalled()) {\n        metaMaskProvider.removeListener(\n          'accountsChanged',\n          handleAccountsChanded\n        );\n        metaMaskProvider.removeListener('chainChanged', handleChainChanged);\n      }\n    };\n  }, [handleAccountsChanded, handleChainChanged]);\n\n  const connect = useCallback(async () => {\n    if (!MetaMaskOnboarding.isMetaMaskInstalled()) {\n      setOnboardingState((prevState) => ({\n        ...prevState,\n        status: 'onboarding'\n      }));\n      metaMaskOnboarding.current?.startOnboarding();\n      return;\n    }\n\n    setOnboardingState((prevState) => ({\n      ...prevState,\n      status: 'connecting',\n      error: undefined\n    }));\n    try {\n      const accounts = await metaMaskProvider.request({\n        method: 'eth_requestAccounts'\n      });\n      handleAccountsChanded(accounts);\n      const chainId = await metaMaskProvider.request({\n        method: 'eth_chainId'\n      });\n      handleChainChanged(chainId);\n    } catch (err) {\n      let message: string | undefined;\n      if (err instanceof Error) {\n        message = err?.message;\n      }\n      if (typeof err === 'string') {\n        message = err;\n      }\n      setOnboardingState((prevState) => ({\n        ...prevState,\n        status: 'notConnected',\n        error: message\n      }));\n    }\n  }, [handleAccountsChanded, handleChainChanged]);\n\n  return {\n    ...onboardingState,\n    isNotInstalled: onboardingState.status === 'notInstalled',\n    isNotConnected: onboardingState.status === 'notConnected',\n    isConnected: onboardingState.status === 'connected',\n    isConnecting: onboardingState.status === 'connecting',\n    isOnboarding: onboardingState.status === 'onboarding',\n    connect\n  };\n}\n","export * from './metaMaskProvider';\n","import events from 'events';\n\nexport type MetaMaskProvider = Omit<events.EventEmitter, 'off'> & {\n  request(options: { method: string }): Promise<any>;\n};\n\nexport const metaMaskProvider: MetaMaskProvider = (window as any).ethereum;\n","type OnBoardingStateStatus =\n  | 'notInstalled'\n  | 'notConnected'\n  | 'onboarding'\n  | 'connecting'\n  | 'connected';\n\nexport type OnboardingState = {\n  status: OnBoardingStateStatus;\n  accounts: string[];\n};\n\nexport const OnboardingState = {\n  notInstalled(): OnboardingState {\n    return {\n      status: 'notInstalled',\n      accounts: []\n    };\n  },\n  notConnected(): OnboardingState {\n    return {\n      status: 'notConnected',\n      accounts: []\n    };\n  },\n  connected(accounts: string[]): OnboardingState {\n    return {\n      status: 'connected',\n      accounts\n    };\n  },\n  connecting(): OnboardingState {\n    return {\n      status: 'connecting',\n      accounts: []\n    };\n  },\n  onboarding(): OnboardingState {\n    return {\n      status: 'onboarding',\n      accounts: []\n    };\n  }\n};\n","export * from './useTokenBalance';\n","import { BigNumber, Contract } from 'ethers';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useProvider } from '../useProvider';\n\ntype TokenBalanceState = {\n  balance: BigNumber;\n  isLoading: boolean;\n  error?: string;\n};\n\ntype TokenBalance = TokenBalanceState & {\n  refresh: () => void;\n};\n\nconst abi = ['function balanceOf(address owner) view returns (uint256)'];\n\nexport const useTokenBalance = (\n  contractAddress: string,\n  address: string\n): TokenBalance => {\n  const provider = useProvider();\n  const contract = useMemo(() => {\n    return new Contract(contractAddress, abi, provider);\n  }, [contractAddress, provider]);\n\n  const [state, setState] = useState<TokenBalanceState>({\n    balance: BigNumber.from(0),\n    isLoading: true\n  });\n\n  const refresh = useCallback(async () => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n      error: undefined\n    }));\n    try {\n      const balance = await contract.balanceOf(address);\n      setState((prevState) => ({\n        ...prevState,\n        balance,\n        isLoading: false\n      }));\n    } catch (err) {\n      let errorMessage: string | undefined;\n      if (err instanceof Error) {\n        errorMessage = err.message;\n      }\n      if (typeof err === 'string') {\n        errorMessage = err;\n      }\n      setState((prevState) => ({\n        ...prevState,\n        isLoading: false,\n        error: errorMessage\n      }));\n    }\n  }, [address, contract]);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n\n  return { ...state, refresh };\n};\n","export * from './useProvider';\n","import { useWeb3Context } from '../../context';\n\nexport const useProvider = () => {\n  const { provider } = useWeb3Context();\n  return provider;\n};\n"],"names":[],"version":3,"file":"module.js.map","sourceRoot":"../"}