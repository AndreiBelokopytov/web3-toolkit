{"version":3,"file":"index.js","sources":["../src/components/Address/Address.tsx","../src/hooks/useMetaMask/MetaMaskOnboardingStatus.ts","../src/providers/ethereum.ts","../src/hooks/useMetaMask/useMetaMask.ts"],"sourcesContent":["import React from 'react';\n\nconst DEFAULT_SUBSTRING_LENGTH = 6;\n\ntype Props = {\n  children: string;\n  substrLength?: number;\n};\n\nexport const Address = React.memo(\n  ({ children: address, substrLength }: Props) => {\n    return <span>{shortenAddress(address, substrLength)}</span>;\n  }\n);\n\nfunction shortenAddress(\n  address: string,\n  substrLength = DEFAULT_SUBSTRING_LENGTH\n) {\n  if (address.length <= substrLength * 2 || address.match(/.*\\.{3}.*/)) {\n    return address;\n  }\n\n  return `${address.slice(0, substrLength)}...${address.slice(\n    address.length - substrLength,\n    address.length\n  )}`;\n}\n","export enum MetaMaskOnboardingStatus {\n  notInstalled = 'notInstalled',\n  notConnected = 'notConnected',\n  onboarding = 'onboarding',\n  connecting = 'connecting',\n  connected = 'connected'\n}\n","import events from 'events';\n\nexport type Ethereum = Omit<events.EventEmitter, 'off'> & {\n  request(options: { method: string }): Promise<any>;\n};\n\nexport const ethereum: Ethereum = (window as any).ethereum;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { MetaMaskOnboardingStatus as OnboardingStatus } from './MetaMaskOnboardingStatus';\nimport MetaMaskOnboarding from '@metamask/onboarding';\nimport { ethereum } from '../../providers/ethereum';\n\ntype MetaMaskOnboardingState = {\n  status: OnboardingStatus;\n  accounts: string[];\n};\n\ntype MetaMaskAdapter = {\n  onboardingState: MetaMaskOnboardingState;\n  connect: () => void;\n};\n\nexport function useMetaMask(): MetaMaskAdapter {\n  const metaMaskOnboarding = useRef<MetaMaskOnboarding>();\n\n  const initialStatus = MetaMaskOnboarding.isMetaMaskInstalled()\n    ? OnboardingStatus.notConnected\n    : OnboardingStatus.notInstalled;\n  const [onboardingState, setOnboardingState] =\n    useState<MetaMaskOnboardingState>({\n      status: initialStatus,\n      accounts: []\n    });\n\n  const handleAccountsChanded = useCallback((accounts: string[]) => {\n    setOnboardingState({\n      status: OnboardingStatus.connected,\n      accounts\n    });\n    metaMaskOnboarding.current?.stopOnboarding();\n  }, []);\n\n  useEffect(() => {\n    metaMaskOnboarding.current = new MetaMaskOnboarding();\n    ethereum.on('accountsChanged', handleAccountsChanded);\n    return () => {\n      ethereum.removeListener('accountsChanged', handleAccountsChanded);\n    };\n  }, [handleAccountsChanded]);\n\n  const connect = useCallback(() => {\n    if (MetaMaskOnboarding.isMetaMaskInstalled()) {\n      setOnboardingState({\n        status: OnboardingStatus.connecting,\n        accounts: []\n      });\n      ethereum\n        .request({\n          method: 'eth_requestAccounts'\n        })\n        .then(handleAccountsChanded);\n    } else {\n      setOnboardingState({\n        status: OnboardingStatus.onboarding,\n        accounts: []\n      });\n      metaMaskOnboarding.current?.startOnboarding();\n    }\n  }, [handleAccountsChanded]);\n\n  return { onboardingState, connect };\n}\n"],"names":["DEFAULT_SUBSTRING_LENGTH","Address","React","memo","address","children","substrLength","shortenAddress","length","match","slice","MetaMaskOnboardingStatus","ethereum","window","useMetaMask","metaMaskOnboarding","useRef","initialStatus","MetaMaskOnboarding","isMetaMaskInstalled","OnboardingStatus","notConnected","notInstalled","useState","status","accounts","onboardingState","setOnboardingState","handleAccountsChanded","useCallback","connected","current","stopOnboarding","useEffect","on","removeListener","connect","connecting","request","method","then","onboarding","startOnboarding"],"mappings":";;;;;;AAEA,IAAMA,wBAAwB,GAAG,CAAjC;IAOaC,OAAO,GAAGC,cAAK,CAACC,IAAN,CACrB;MAAaC,eAAVC;MAAmBC,oBAAAA;EACpB,OAAOJ,4BAAA,OAAA,MAAA,EAAOK,cAAc,CAACH,OAAD,EAAUE,YAAV,CAArB,CAAP;AACD,CAHoB;;AAMvB,SAASC,cAAT,CACEH,OADF,EAEEE,YAFF;MAEEA;IAAAA,eAAeN;;;EAEf,IAAII,OAAO,CAACI,MAAR,IAAkBF,YAAY,GAAG,CAAjC,IAAsCF,OAAO,CAACK,KAAR,CAAc,WAAd,CAA1C,EAAsE;IACpE,OAAOL,OAAP;;;EAGF,OAAUA,OAAO,CAACM,KAAR,CAAc,CAAd,EAAiBJ,YAAjB,CAAV,WAA8CF,OAAO,CAACM,KAAR,CAC5CN,OAAO,CAACI,MAAR,GAAiBF,YAD2B,EAE5CF,OAAO,CAACI,MAFoC,CAA9C;AAID;;AC3BD,WAAYG;EACVA,wCAAA,iBAAA;EACAA,wCAAA,iBAAA;EACAA,sCAAA,eAAA;EACAA,sCAAA,eAAA;EACAA,qCAAA,cAAA;AACD,CAND,EAAYA,gCAAwB,KAAxBA,gCAAwB,KAAA,CAApC;;ICMaC,QAAQ,GAAcC,MAAc,CAACD,QAA3C;;SCSSE;EACd,IAAMC,kBAAkB,GAAGC,YAAM,EAAjC;EAEA,IAAMC,aAAa,GAAGC,kBAAkB,CAACC,mBAAnB,KAClBC,gCAAgB,CAACC,YADC,GAElBD,gCAAgB,CAACE,YAFrB;;EAGA,gBACEC,cAAQ,CAA0B;IAChCC,MAAM,EAAEP,aADwB;IAEhCQ,QAAQ,EAAE;GAFJ,CADV;MAAOC,eAAP;MAAwBC,kBAAxB;;EAMA,IAAMC,qBAAqB,GAAGC,iBAAW,CAAC,UAACJ,QAAD;;;IACxCE,kBAAkB,CAAC;MACjBH,MAAM,EAAEJ,gCAAgB,CAACU,SADR;MAEjBL,QAAQ,EAARA;KAFgB,CAAlB;IAIA,yBAAAV,kBAAkB,CAACgB,OAAnB,gFAA4BC,cAA5B;GALuC,EAMtC,EANsC,CAAzC;EAQAC,eAAS,CAAC;IACRlB,kBAAkB,CAACgB,OAAnB,GAA6B,IAAIb,kBAAJ,EAA7B;IACAN,QAAQ,CAACsB,EAAT,CAAY,iBAAZ,EAA+BN,qBAA/B;IACA,OAAO;MACLhB,QAAQ,CAACuB,cAAT,CAAwB,iBAAxB,EAA2CP,qBAA3C;KADF;GAHO,EAMN,CAACA,qBAAD,CANM,CAAT;EAQA,IAAMQ,OAAO,GAAGP,iBAAW,CAAC;IAC1B,IAAIX,kBAAkB,CAACC,mBAAnB,EAAJ,EAA8C;MAC5CQ,kBAAkB,CAAC;QACjBH,MAAM,EAAEJ,gCAAgB,CAACiB,UADR;QAEjBZ,QAAQ,EAAE;OAFM,CAAlB;MAIAb,QAAQ,CACL0B,OADH,CACW;QACPC,MAAM,EAAE;OAFZ,EAIGC,IAJH,CAIQZ,qBAJR;KALF,MAUO;MAAA;;MACLD,kBAAkB,CAAC;QACjBH,MAAM,EAAEJ,gCAAgB,CAACqB,UADR;QAEjBhB,QAAQ,EAAE;OAFM,CAAlB;MAIA,0BAAAV,kBAAkB,CAACgB,OAAnB,kFAA4BW,eAA5B;;GAhBuB,EAkBxB,CAACd,qBAAD,CAlBwB,CAA3B;EAoBA,OAAO;IAAEF,eAAe,EAAfA,eAAF;IAAmBU,OAAO,EAAPA;GAA1B;AACD;;;;;;"}